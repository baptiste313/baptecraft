#!/bin/bash

# wget -qO install.sh https://baptecraft.ovh/install && bash install.sh

echo "
╔╗────────╔╗────────────╔═╗╔╗
║║───────╔╝╚╗───────────║╔╬╝╚╗
║╚═╦══╦══╬╗╔╬══╦══╦═╦══╦╝╚╬╗╔╝
║╔╗║╔╗║╔╗║║║║║═╣╔═╣╔╣╔╗╠╗╔╝║║
║╚╝║╔╗║╚╝║║╚╣║═╣╚═╣║║╔╗║║║─║╚╗
╚══╩╝╚╣╔═╝╚═╩══╩══╩╝╚╝╚╝╚╝─╚═╝
──────║║
──────╚╝
— Bienvenue dans l'installateur de baptecraft —
IP de l'hôte : $(hostname -I | awk '{print $1}')
IP publique de l'hôte : $(curl -s https://checkip.hedouin.eu/ || curl -s https://checkip.amazonaws.com/)
"

if [[ $(id -u) -ne 0 ]] ; then echo "Veuillez exécuter en tant que sudo" ; exit 1 ; fi

read -r -p "L'installation va commencer, voulez-vous continuer ? (cela peut prendre un certain temps)... [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO])
        ;;
    *)
        exit 0
        ;;
esac

apt update && apt -y full-upgrade && apt install -y apt-transport-https curl dirmngr git gnupg1 ntp openjdk-17-jdk python3-pip screen sl unattended-upgrades unzip webp

read -r -p "Voulez-vous mettre à jour le fimware ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        rpi-update
        ;;
esac

read -r -p "Voulez-vous installer Docker ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        curl -sSL https://get.docker.com | bash
        apt install -y containerd.io docker-ce-cli
        printf "\n[\e[32m✓\e[0m] Installation réussie de Docker\n"
        ;;
esac

read -r -p "Voulez-vous installer CrowdSec ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        curl -sSL https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.deb.sh | bash
        apt install -y crowdsec
        printf "\n[\e[32m✓\e[0m] Installation réussie de CrowdSec\n"
        ;;
esac

read -r -p "Voulez-vous installer Speedtest CLI ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        curl -sSL https://packagecloud.io/ookla/speedtest-cli/gpgkey | gpg --dearmor | sudo tee /usr/share/keyrings/speedtestcli-archive-keyring.gpg >/dev/null
        echo "deb [signed-by=/usr/share/keyrings/speedtestcli-archive-keyring.gpg] https://packagecloud.io/ookla/speedtest-cli/debian/ $(lsb_release -cs) main" | sudo tee  /etc/apt/sources.list.d/speedtest.list
        apt update && apt install -y speedtest
        printf "\n[\e[32m✓\e[0m] Installation réussie de Speedtest CLI\n"
        ;;
esac

read -r -p "Voulez-vous installer Minecraft Dynmap Time Machine ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        pip3 install dynmap_timemachine
        printf "\n[\e[32m✓\e[0m] Installation réussie de Minecraft Dynmap Time Machine\n"
        ;;
esac

read -r -p "Voulez-vous installer Docker Compose ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        pip3 install docker-compose
        printf "\n[\e[32m✓\e[0m] Installation réussie de Docker Compose\n"
        ;;
esac

read -r -p "Voulez-vous installer Uptime Kuma ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        docker run -d --restart=always -p 3001:3001 louislam/uptime-kuma:latest
        printf "\n[\e[32m✓\e[0m] Installation réussie de Uptime Kuma\n"
        printf "— http://%s$(hostname -I | awk '{print $1}'):3001\n"
        ;;
esac

read -r -p "Voulez-vous installer Nginx Proxy Manager ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        docker run -d --restart=always -p 81:81 -p 80:80 -p 443:443 jc21/nginx-proxy-manager:latest
        printf "\n[\e[32m✓\e[0m] Installation réussie de Nginx Proxy Manager\n"
        printf "— http://%s$(hostname -I | awk '{print $1}'):81\n"
        ;;
esac

read -r -p "Voulez-vous installer Pi-hole ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        docker run -d --restart=always -p 53:53/tcp -p 53:53/udp -p 67:67/udp -p 8888:8888/tcp pihole/pihole:latest
        printf "\n[\e[32m✓\e[0m] Installation réussie de Nginx Proxy Manager\n"
        printf "— http://%s$(hostname -I | awk '{print $1}'):81\n"
        ;;
esac

read -r -p "Voulez-vous installer Impostor ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        docker run -d --restart=always -p 22023:22023/udp aeonlucid/impostor:latest
        printf "\n[\e[32m✓\e[0m] Installation réussie de Impostor\n"
        printf "— https://baptecraft.ovh/baptus/\n"
        ;;
esac

read -r -p "Voulez-vous installer zRam ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        git clone https://github.com/foundObjects/zram-swap && cd zram-swap || exit
        ./install.sh
        printf "\n[\e[32m✓\e[0m] Installation réussie de zram\n"
        ;;
esac

read -r -p "Voulez-vous installer Minecraft ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        mkdir /home/minecraft && cd /home/minecraft || exit
        wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar https://gist.githubusercontent.com/baptiste313/32237df60b8ae0e018eacc741f0175e2/raw/d19efbf9f1606a746d64d25acb8d4242b646267a/start.sh https://www.dropbox.com/s/e4uwzvutlnijx72/baptecraft.zip
        unzip baptecraft.zip
        mv /home/minecraft/baptecraft/* /home/minecraft
        java -Xmx1024M -jar /home/minecraft/BuildTools.jar --rev 1.18
        java -Xms512M -Xmx1024M -jar /home/minecraft/spigot-1.18.jar nogui
        sed -i 's/false/true/g' /home/minecraft/eula.txt
        rm -rf /home/minecraft/baptecraft
        cp start.sh /home/pi
        cp start.sh /root
        printf "\n[\e[32m✓\e[0m] Installation réussie de Minecraft\n"
        ;;
esac

read -r -p "Voulez-vous modifier /etc/rc.local ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        echo '#!/bin/bash' > /etc/rc.local
        echo "dhclient" >> /etc/rc.local
        #echo "/root/start.sh" >> /etc/rc.local
        echo "exit 0" >> /etc/rc.local
        printf "\n[\e[32m✓\e[0m] Edition réussie de rc.local\n"
        ;;
esac

read -r -p "Voulez-vous modifier /etc/dhcpcd.conf ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        sed -i 's/#interface/interface/g' /etc/dhcpcd.conf
        sed -i 's/#static ip_address/static ip_address/g' /etc/dhcpcd.conf
        sed -i 's/#static ip6_address/static ip6_address/g' /etc/dhcpcd.conf
        sed -i 's/#static routers=/static routers=/g' /etc/dhcpcd.conf
        sed -i 's/#static domain_name_servers/static domain_name_servers/g' /etc/dhcpcd.conf
        sed -i 's/static domain_name_servers=.*/static domain_name_servers=80.67.169.12 80.67.169.40 2001:910:800::12 2001:910:800::40/' /etc/dhcpcd.conf
        printf "\n[\e[32m✓\e[0m] Edition réussie de dhcpcd.conf\n"
        ;;
esac

read -r -p "Voulez-vous modifier /etc/hostname ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        sed -i 's/raspberrypi/baptecraft/g' /etc/hostname
        printf "\n[\e[32m✓\e[0m] Edition réussie de hostname\n"
        ;;
esac

read -r -p "Voulez-vous modifier /etc/hosts ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        sed -i 's/raspberrypi/baptecraft/g' /etc/hosts
        printf "\n[\e[32m✓\e[0m] Edition réussie de hosts\n"
        ;;
esac

read -r -p "Voulez-vous modifier /etc/ntp.conf ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        sed -i 's/debian/fr/g' /etc/ntp.conf
        printf "\n[\e[32m✓\e[0m] Edition réussie de ntp.conf\n"
        ;;
esac

read -r -p "Voulez-vous modifier /etc/ssh/sshd_config ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
        printf "\n[\e[32m✓\e[0m] Edition réussie de ssh\n"
        ;;
esac

read -r -p "Voulez-vous modifier /boot/config.txt ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        sed -i 's/#arm_freq/arm_freq/g' /boot/config.txt
        sed -i 's/#over_voltage=/over_voltage=/g' /boot/config.txt
        sed -i 's/#gpu_freq/gpu_freq/g' /boot/config.txt
        sed -i 's/arm_freq=.*/arm_freq=2147/' /boot/config.txt
        sed -i 's/over_voltage=.*/over_voltage=6/' /boot/config.txt
        sed -i 's/gpu_freq=.*/gpu_freq=750/' /boot/config.txt
        printf "\n[\e[32m✓\e[0m] Edition réussie de config.txt\n"
        ;;
esac

read -r -p "Voulez-vous changer la langue du système ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        dpkg-reconfigure locales
        printf "\n[\e[32m✓\e[0m] Le changement de langue du système est terminé\n"
        ;;
esac

read -r -p "L'installation est terminée, voulez-vous redémarrer maintenant ? [O/n] " response
case "$response" in
    [oO][eE][sS]|[oO]) 
        apt -y autoclean && apt -y autoremove
        i=60;while [ $i -gt 0 ];do if [ $i -gt 9 ];then printf "\b\b$i";else  printf "\b\b $i";fi;sleep 1;i=$(expr $i - 1);done
        printf "\n"
        ;;
    *)
        exit 0
        ;;
esac

/sbin/reboot now
